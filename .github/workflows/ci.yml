name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust-version: [stable, beta, nightly]
        runtime: [runtime-tokio, runtime-agnostic]
        include:
        - rust-version: nightly
          continue-on-error: true

    name: build (${{ matrix.os }} / ${{ matrix.rust-version }} / ${{ matrix.runtime }})

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust-version }}
    - name: Build
      continue-on-error: ${{ matrix.continue-on-error || false }}
      run: cargo build --workspace --no-default-features --features ${{ matrix.runtime }}
    - name: Run tests
      continue-on-error: ${{ matrix.continue-on-error || false }}
      run: cargo test --workspace --no-default-features --features ${{ matrix.runtime }}

  lint:
    name: clippy

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy
    - name: Lint
      run: cargo clippy --all-targets --features proposed -- -D warnings

  format:
    name: rustfmt

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt
    - name: 
      run: cargo fmt --all -- --check
